//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35059454
// Cuda compilation tools, release 12.6, V12.6.85
// Based on NVVM 7.0.1
//

.version 8.5
.target sm_52
.address_size 64

	// .globl	EmbeddingLookup

.visible .entry EmbeddingLookup(
	.param .u64 EmbeddingLookup_param_0,
	.param .u64 EmbeddingLookup_param_1,
	.param .u64 EmbeddingLookup_param_2,
	.param .u32 EmbeddingLookup_param_3,
	.param .u32 EmbeddingLookup_param_4,
	.param .u32 EmbeddingLookup_param_5
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd16, [EmbeddingLookup_param_0];
	ld.param.u64 	%rd15, [EmbeddingLookup_param_1];
	ld.param.u64 	%rd17, [EmbeddingLookup_param_2];
	ld.param.u32 	%r15, [EmbeddingLookup_param_3];
	ld.param.u32 	%r16, [EmbeddingLookup_param_4];
	ld.param.u32 	%r17, [EmbeddingLookup_param_5];
	cvta.to.global.u64 	%rd1, %rd17;
	cvta.to.global.u64 	%rd2, %rd16;
	mov.u32 	%r1, %ctaid.x;
	setp.ge.s32 	%p1, %r1, %r15;
	mov.u32 	%r2, %tid.x;
	setp.ge.s32 	%p2, %r2, %r16;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB0_8;

	cvta.to.global.u64 	%rd18, %rd15;
	mad.lo.s32 	%r3, %r1, %r16, %r2;
	mul.wide.s32 	%rd19, %r3, 4;
	add.s64 	%rd20, %rd18, %rd19;
	ld.global.f32 	%f1, [%rd20];
	cvt.rzi.s32.f32 	%r4, %f1;
	setp.lt.s32 	%p4, %r4, 0;
	setp.ge.s32 	%p5, %r4, %r15;
	or.pred  	%p6, %p5, %p4;
	setp.lt.s32 	%p7, %r17, 1;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_8;

	mul.lo.s32 	%r5, %r3, %r17;
	and.b32  	%r27, %r17, 3;
	add.s32 	%r19, %r17, -1;
	setp.lt.u32 	%p9, %r19, 3;
	mov.u32 	%r26, 0;
	@%p9 bra 	$L__BB0_5;

	sub.s32 	%r25, %r17, %r27;
	mul.lo.s32 	%r21, %r4, %r17;
	mul.wide.s32 	%rd21, %r21, 4;
	add.s64 	%rd25, %rd2, %rd21;
	mul.wide.s32 	%rd4, %r5, 4;
	mov.u32 	%r26, 0;
	mov.u64 	%rd26, %rd1;

$L__BB0_4:
	ld.global.f32 	%f2, [%rd25];
	add.s64 	%rd22, %rd26, %rd4;
	st.global.f32 	[%rd22], %f2;
	ld.global.f32 	%f3, [%rd25+4];
	st.global.f32 	[%rd22+4], %f3;
	ld.global.f32 	%f4, [%rd25+8];
	st.global.f32 	[%rd22+8], %f4;
	ld.global.f32 	%f5, [%rd25+12];
	st.global.f32 	[%rd22+12], %f5;
	add.s32 	%r26, %r26, 4;
	add.s64 	%rd26, %rd26, 16;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r25, %r25, -4;
	setp.ne.s32 	%p10, %r25, 0;
	@%p10 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p11, %r27, 0;
	@%p11 bra 	$L__BB0_8;

	add.s32 	%r22, %r26, %r5;
	mul.wide.s32 	%rd23, %r22, 4;
	add.s64 	%rd28, %rd1, %rd23;
	mad.lo.s32 	%r23, %r4, %r17, %r26;
	mul.wide.s32 	%rd24, %r23, 4;
	add.s64 	%rd27, %rd2, %rd24;

$L__BB0_7:
	.pragma "nounroll";
	ld.global.f32 	%f6, [%rd27];
	st.global.f32 	[%rd28], %f6;
	add.s64 	%rd28, %rd28, 4;
	add.s64 	%rd27, %rd27, 4;
	add.s32 	%r27, %r27, -1;
	setp.ne.s32 	%p12, %r27, 0;
	@%p12 bra 	$L__BB0_7;

$L__BB0_8:
	ret;

}
	// .globl	EmbeddingBackward
.visible .entry EmbeddingBackward(
	.param .u64 EmbeddingBackward_param_0,
	.param .u64 EmbeddingBackward_param_1,
	.param .u64 EmbeddingBackward_param_2,
	.param .u32 EmbeddingBackward_param_3,
	.param .u32 EmbeddingBackward_param_4,
	.param .u32 EmbeddingBackward_param_5,
	.param .u32 EmbeddingBackward_param_6,
	.param .f32 EmbeddingBackward_param_7
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<22>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<44>;


	ld.param.u64 	%rd25, [EmbeddingBackward_param_0];
	ld.param.u64 	%rd26, [EmbeddingBackward_param_1];
	ld.param.u64 	%rd24, [EmbeddingBackward_param_2];
	ld.param.u32 	%r17, [EmbeddingBackward_param_3];
	ld.param.u32 	%r15, [EmbeddingBackward_param_4];
	ld.param.u32 	%r16, [EmbeddingBackward_param_6];
	ld.param.f32 	%f1, [EmbeddingBackward_param_7];
	cvta.to.global.u64 	%rd1, %rd25;
	cvta.to.global.u64 	%rd2, %rd26;
	mov.u32 	%r1, %ctaid.x;
	setp.ge.s32 	%p1, %r1, %r17;
	mov.u32 	%r2, %tid.x;
	setp.ge.s32 	%p2, %r2, %r15;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB1_8;

	mad.lo.s32 	%r3, %r1, %r15, %r2;
	setp.lt.s32 	%p4, %r16, 1;
	@%p4 bra 	$L__BB1_8;

	cvta.to.global.u64 	%rd27, %rd24;
	mul.wide.s32 	%rd28, %r3, 4;
	add.s64 	%rd29, %rd27, %rd28;
	ld.global.u32 	%r4, [%rd29];
	mul.lo.s32 	%r5, %r3, %r16;
	and.b32  	%r30, %r16, 3;
	add.s32 	%r19, %r16, -1;
	setp.lt.u32 	%p5, %r19, 3;
	mov.u32 	%r29, 0;
	@%p5 bra 	$L__BB1_5;

	sub.s32 	%r28, %r16, %r30;
	mul.lo.s32 	%r21, %r4, %r16;
	add.s32 	%r22, %r21, 3;
	mul.wide.s32 	%rd30, %r22, 4;
	add.s64 	%rd40, %rd1, %rd30;
	add.s32 	%r23, %r21, 2;
	mul.wide.s32 	%rd31, %r23, 4;
	add.s64 	%rd39, %rd1, %rd31;
	add.s32 	%r24, %r21, 1;
	mul.wide.s32 	%rd32, %r24, 4;
	add.s64 	%rd38, %rd1, %rd32;
	mul.wide.s32 	%rd33, %r21, 4;
	add.s64 	%rd37, %rd1, %rd33;
	mul.wide.s32 	%rd7, %r5, 4;
	mov.u32 	%r29, 0;
	mov.u64 	%rd41, %rd2;

$L__BB1_4:
	add.s64 	%rd34, %rd41, %rd7;
	ld.global.f32 	%f2, [%rd34];
	mul.f32 	%f3, %f2, %f1;
	neg.f32 	%f4, %f3;
	atom.global.add.f32 	%f5, [%rd37], %f4;
	ld.global.f32 	%f6, [%rd34+4];
	mul.f32 	%f7, %f6, %f1;
	neg.f32 	%f8, %f7;
	atom.global.add.f32 	%f9, [%rd38], %f8;
	ld.global.f32 	%f10, [%rd34+8];
	mul.f32 	%f11, %f10, %f1;
	neg.f32 	%f12, %f11;
	atom.global.add.f32 	%f13, [%rd39], %f12;
	ld.global.f32 	%f14, [%rd34+12];
	mul.f32 	%f15, %f14, %f1;
	neg.f32 	%f16, %f15;
	atom.global.add.f32 	%f17, [%rd40], %f16;
	add.s32 	%r29, %r29, 4;
	add.s64 	%rd41, %rd41, 16;
	add.s64 	%rd40, %rd40, 16;
	add.s64 	%rd39, %rd39, 16;
	add.s64 	%rd38, %rd38, 16;
	add.s64 	%rd37, %rd37, 16;
	add.s32 	%r28, %r28, -4;
	setp.ne.s32 	%p6, %r28, 0;
	@%p6 bra 	$L__BB1_4;

$L__BB1_5:
	setp.eq.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB1_8;

	add.s32 	%r25, %r29, %r5;
	mul.wide.s32 	%rd35, %r25, 4;
	add.s64 	%rd43, %rd2, %rd35;
	mad.lo.s32 	%r26, %r4, %r16, %r29;
	mul.wide.s32 	%rd36, %r26, 4;
	add.s64 	%rd42, %rd1, %rd36;

$L__BB1_7:
	.pragma "nounroll";
	ld.global.f32 	%f18, [%rd43];
	mul.f32 	%f19, %f18, %f1;
	neg.f32 	%f20, %f19;
	atom.global.add.f32 	%f21, [%rd42], %f20;
	add.s64 	%rd43, %rd43, 4;
	add.s64 	%rd42, %rd42, 4;
	add.s32 	%r30, %r30, -1;
	setp.ne.s32 	%p8, %r30, 0;
	@%p8 bra 	$L__BB1_7;

$L__BB1_8:
	ret;

}

